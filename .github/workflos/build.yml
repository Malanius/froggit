name: Build and Release Froggit

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          mkdir -p dist
          BIN_NAME="froggit-${{ matrix.os }}-${{ matrix.arch }}"
          [[ "${{ matrix.os }}" == "windows" ]] && BIN_NAME="$BIN_NAME.exe"
          go build -o "$BIN_NAME" .
          zip -j "dist/${{ matrix.os }}-${{ matrix.arch }}.zip" "$BIN_NAME"

      - name: Upload artifact for release
        uses: actions/upload-artifact@v4
        with:
          name: froggit-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/${{ matrix.os }}-${{ matrix.arch }}.zip

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Froggit ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: |
            artifacts/**/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
